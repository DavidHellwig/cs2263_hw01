/*
 * This Java source file was generated by the Gradle 'init' task.
 */
//Author: David Hellwig
package edu.isu.cs2263.hw01;


import org.apache.commons.cli.*;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Scanner;


public class App {







    @SuppressWarnings("TextBlockMigration")
    public static void main(String[] args) throws IOException {
        //Sets up the options
        Options options = new Options();

        options.addOption("h", "help",false,"displays help message");

        options.addOption("b","batch",true , "processes a file provided");

        options.addOption("o","output",true,"sends the output to the provided file");

        options.addOption("eval",false,"evaluate expression");


        //Create parser as suggested by Apache Commons Documentation
        CommandLineParser parser = new DefaultParser();


        try {

            CommandLine cmd = parser.parse(options, args);

            //Get the option based on arg
            //Help
            if (cmd.hasOption("h")) {
                System.out.println("usage: eval [OPTIONS]\nEvaluation of simple mathematical expressions\n" +
                        "-b,--batch <file>    batch file containing expressions to evaluate\n" +
                        "-h,--help            print usage message\n" +
                        "-o,--output <file>   output file\n" +
                        "\t\tCopyright (C) 2021 Isaac D. Griffith"
                );
                System.exit(0);
              //Process file
            } else if (cmd.hasOption("b")) {

                File batchFile = new File(args[1]);

                InputFileOps input = new InputFileOps();

                input.scanFile(batchFile.getAbsoluteFile());

            //Output to file
            } else if (cmd.hasOption("o")) {
                File outputFile = new File(args[1]);

                OutPutFileOps outPutFileOps = new OutPutFileOps();

                outPutFileOps.beginOutput(outputFile);


            }
            //Begin evaluation
            else if (cmd.hasOption("eval")){

                InputHandler inputHandler = new InputHandler();

            }
        }
        //Redundancy
        catch (ParseException | FileNotFoundException e) {

            e.printStackTrace();
        }
    }






    }

